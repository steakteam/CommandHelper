package com.laytonsmith.abstraction.enums;

import com.laytonsmith.PureUtilities.ClassLoading.DynamicEnum;
import com.laytonsmith.annotations.MDynamicEnum;
import com.laytonsmith.annotations.MEnum;
import com.laytonsmith.core.Static;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

@MDynamicEnum("Sound")
public abstract class MCSound<Concrete> extends DynamicEnum<MCSound.MCVanillaSound, Concrete> {

    // To be filled by the implementer
    protected static Map<String, MCSound> mappings;

    public static MCSound NULL = null;

    public MCSound(MCVanillaSound mcVanillaSound, Concrete concrete) {
        super(mcVanillaSound, concrete);
    }

    public static MCSound valueOf(String test) throws IllegalArgumentException {
        if (mappings == null) {
            return null;
        }
        MCSound ret = mappings.get(test);
        if (ret == null) {
            throw new IllegalArgumentException("Unknown sound: " + test);
        }
        return ret;
    }

    public static Set<String> types() {
        if (NULL == null) { // docs mode
            Set<String> dummy = new HashSet<>();
            for (final MCVanillaSound s : MCVanillaSound.values()) {
                // Ignore UNKNOWN and pre-1.9 sound names for docs
                if (s.since.equals(MCVersion.MC1_0) || s.equals(MCVanillaSound.UNKNOWN)) {
                    continue;
                }
                dummy.add(s.name());
            }
            return dummy;
        }
        return new TreeSet<>(mappings.keySet());
    }

    public static Collection<MCSound> values() {
        if (NULL == null) { // docs mode
            ArrayList<MCSound> dummy = new ArrayList<>();
            for (final MCVanillaSound s : MCVanillaSound.values()) {
                // Ignore UNKNOWN and pre-1.9 sound names for docs
                if (s.since.equals(MCVersion.MC1_0) || s.equals(MCVanillaSound.UNKNOWN)) {
                    continue;
                }
                dummy.add(new MCSound<Object>(s, null) {
                    @Override
                    public String name() {
                        return s.name();
                    }

                    @Override
                    public String concreteName() {
                        return s.name();
                    }
                });
            }
            return dummy;
        }
        return mappings.values();
    }

    @MEnum("VanillaSound")
    public enum MCVanillaSound {
        // Pre 1.9 sounds
        AMBIENCE_CAVE,
        AMBIENCE_RAIN,
        AMBIENCE_THUNDER,
        ANVIL_BREAK,
        ANVIL_LAND,
        ANVIL_USE,
        ARROW_HIT,
        BURP,
        CHEST_CLOSE,
        CHEST_OPEN,
        CLICK,
        DOOR_CLOSE,
        DOOR_OPEN,
        DRINK,
        EAT,
        EXPLODE,
        FALL_BIG,
        FALL_SMALL,
        FIRE,
        FIRE_IGNITE,
        FIZZ,
        FUSE,
        GLASS,
        HURT_FLESH,
        ITEM_BREAK,
        ITEM_PICKUP,
        LAVA,
        LAVA_POP,
        LEVEL_UP,
        MINECART_BASE,
        MINECART_INSIDE,
        NOTE_BASS,
        NOTE_PIANO,
        NOTE_BASS_DRUM,
        NOTE_STICKS,
        NOTE_BASS_GUITAR,
        NOTE_SNARE_DRUM,
        NOTE_PLING,
        ORB_PICKUP,
        PISTON_EXTEND,
        PISTON_RETRACT,
        PORTAL,
        PORTAL_TRAVEL,
        PORTAL_TRIGGER,
        SHOOT_ARROW,
        SPLASH,
        SPLASH2,
        STEP_GRASS,
        STEP_GRAVEL,
        STEP_LADDER,
        STEP_SAND,
        STEP_SNOW,
        STEP_STONE,
        STEP_WOOD,
        STEP_WOOL,
        SWIM,
        WATER,
        WOOD_CLICK,
        BAT_DEATH,
        BAT_HURT,
        BAT_IDLE,
        BAT_LOOP,
        BAT_TAKEOFF,
        BLAZE_BREATH,
        BLAZE_DEATH,
        BLAZE_HIT,
        CAT_HISS,
        CAT_HIT,
        CAT_MEOW,
        CAT_PURR,
        CAT_PURREOW,
        CHICKEN_IDLE,
        CHICKEN_HURT,
        CHICKEN_EGG_POP,
        CHICKEN_WALK,
        COW_IDLE,
        COW_HURT,
        COW_WALK,
        CREEPER_HISS,
        CREEPER_DEATH,
        ENDERDRAGON_DEATH,
        ENDERDRAGON_GROWL,
        ENDERDRAGON_HIT,
        ENDERDRAGON_WINGS,
        ENDERMAN_DEATH,
        ENDERMAN_HIT,
        ENDERMAN_IDLE,
        ENDERMAN_TELEPORT,
        ENDERMAN_SCREAM,
        ENDERMAN_STARE,
        GHAST_SCREAM,
        GHAST_SCREAM2,
        GHAST_CHARGE,
        GHAST_DEATH,
        GHAST_FIREBALL,
        GHAST_MOAN,
        IRONGOLEM_DEATH,
        IRONGOLEM_HIT,
        IRONGOLEM_THROW,
        IRONGOLEM_WALK,
        MAGMACUBE_WALK,
        MAGMACUBE_WALK2,
        MAGMACUBE_JUMP,
        PIG_IDLE,
        PIG_DEATH,
        PIG_WALK,
        SHEEP_IDLE,
        SHEEP_SHEAR,
        SHEEP_WALK,
        SILVERFISH_HIT,
        SILVERFISH_KILL,
        SILVERFISH_IDLE,
        SILVERFISH_WALK,
        SKELETON_IDLE,
        SKELETON_DEATH,
        SKELETON_HURT,
        SKELETON_WALK,
        SLIME_ATTACK,
        SLIME_WALK,
        SLIME_WALK2,
        SPIDER_IDLE,
        SPIDER_DEATH,
        SPIDER_WALK,
        WITHER_DEATH,
        WITHER_HURT,
        WITHER_IDLE,
        WITHER_SHOOT,
        WITHER_SPAWN,
        WOLF_BARK,
        WOLF_DEATH,
        WOLF_GROWL,
        WOLF_HOWL,
        WOLF_HURT,
        WOLF_PANT,
        WOLF_SHAKE,
        WOLF_WALK,
        WOLF_WHINE,
        ZOMBIE_METAL,
        ZOMBIE_WOOD,
        ZOMBIE_WOODBREAK,
        ZOMBIE_IDLE,
        ZOMBIE_DEATH,
        ZOMBIE_HURT,
        ZOMBIE_INFECT,
        ZOMBIE_UNFECT,
        ZOMBIE_REMEDY,
        ZOMBIE_PIG_IDLE,
        ZOMBIE_PIG_ANGRY,
        ZOMBIE_PIG_DEATH,
        ZOMBIE_PIG_HURT,
        DIG_WOOL,
        DIG_GRASS,
        DIG_GRAVEL,
        DIG_SAND,
        DIG_SNOW,
        DIG_STONE,
        DIG_WOOD,

        // After 1.9 renames
        AMBIENT_CAVE(MCVersion.MC1_9),
        BLOCK_ANVIL_BREAK(MCVersion.MC1_9),
        BLOCK_ANVIL_DESTROY(MCVersion.MC1_9),
        BLOCK_ANVIL_FALL(MCVersion.MC1_9),
        BLOCK_ANVIL_HIT(MCVersion.MC1_9),
        BLOCK_ANVIL_LAND(MCVersion.MC1_9),
        BLOCK_ANVIL_PLACE(MCVersion.MC1_9),
        BLOCK_ANVIL_STEP(MCVersion.MC1_9),
        BLOCK_ANVIL_USE(MCVersion.MC1_9),
        BLOCK_BREWING_STAND_BREW(MCVersion.MC1_9),
        BLOCK_CHEST_CLOSE(MCVersion.MC1_9),
        BLOCK_CHEST_LOCKED(MCVersion.MC1_9),
        BLOCK_CHEST_OPEN(MCVersion.MC1_9),
        BLOCK_CHORUS_FLOWER_DEATH(MCVersion.MC1_9),
        BLOCK_CHORUS_FLOWER_GROW(MCVersion.MC1_9),
        BLOCK_CLOTH_BREAK(MCVersion.MC1_9),
        BLOCK_CLOTH_FALL(MCVersion.MC1_9),
        BLOCK_CLOTH_HIT(MCVersion.MC1_9),
        BLOCK_CLOTH_PLACE(MCVersion.MC1_9),
        BLOCK_CLOTH_STEP(MCVersion.MC1_9),
        BLOCK_COMPARATOR_CLICK(MCVersion.MC1_9),
        BLOCK_DISPENSER_DISPENSE(MCVersion.MC1_9),
        BLOCK_DISPENSER_FAIL(MCVersion.MC1_9),
        BLOCK_DISPENSER_LAUNCH(MCVersion.MC1_9),
        BLOCK_ENCHANTMENT_TABLE_USE(MCVersion.MC1_10),
        BLOCK_ENDERCHEST_CLOSE(MCVersion.MC1_9),
        BLOCK_ENDERCHEST_OPEN(MCVersion.MC1_9),
        BLOCK_END_GATEWAY_SPAWN(MCVersion.MC1_9),
        BLOCK_END_PORTAL_FRAME_FILL(MCVersion.MC1_12),
        BLOCK_END_PORTAL_SPAWN(MCVersion.MC1_12),
        BLOCK_FENCE_GATE_CLOSE(MCVersion.MC1_9),
        BLOCK_FENCE_GATE_OPEN(MCVersion.MC1_9),
        BLOCK_FIRE_AMBIENT(MCVersion.MC1_9),
        BLOCK_FIRE_EXTINGUISH(MCVersion.MC1_9),
        BLOCK_FURNACE_FIRE_CRACKLE(MCVersion.MC1_9),
        BLOCK_GLASS_BREAK(MCVersion.MC1_9),
        BLOCK_GLASS_FALL(MCVersion.MC1_9),
        BLOCK_GLASS_HIT(MCVersion.MC1_9),
        BLOCK_GLASS_PLACE(MCVersion.MC1_9),
        BLOCK_GLASS_STEP(MCVersion.MC1_9),
        BLOCK_GRASS_BREAK(MCVersion.MC1_9),
        BLOCK_GRASS_FALL(MCVersion.MC1_9),
        BLOCK_GRASS_HIT(MCVersion.MC1_9),
        BLOCK_GRASS_PLACE(MCVersion.MC1_9),
        BLOCK_GRASS_STEP(MCVersion.MC1_9),
        BLOCK_GRAVEL_BREAK(MCVersion.MC1_9),
        BLOCK_GRAVEL_FALL(MCVersion.MC1_9),
        BLOCK_GRAVEL_HIT(MCVersion.MC1_9),
        BLOCK_GRAVEL_PLACE(MCVersion.MC1_9),
        BLOCK_GRAVEL_STEP(MCVersion.MC1_9),
        BLOCK_IRON_DOOR_CLOSE(MCVersion.MC1_9),
        BLOCK_IRON_DOOR_OPEN(MCVersion.MC1_9),
        BLOCK_IRON_TRAPDOOR_CLOSE(MCVersion.MC1_9),
        BLOCK_IRON_TRAPDOOR_OPEN(MCVersion.MC1_9),
        BLOCK_LADDER_BREAK(MCVersion.MC1_9),
        BLOCK_LADDER_FALL(MCVersion.MC1_9),
        BLOCK_LADDER_HIT(MCVersion.MC1_9),
        BLOCK_LADDER_PLACE(MCVersion.MC1_9),
        BLOCK_LADDER_STEP(MCVersion.MC1_9),
        BLOCK_LAVA_AMBIENT(MCVersion.MC1_9),
        BLOCK_LAVA_EXTINGUISH(MCVersion.MC1_9),
        BLOCK_LAVA_POP(MCVersion.MC1_9),
        BLOCK_LEVER_CLICK(MCVersion.MC1_9),
        BLOCK_METAL_BREAK(MCVersion.MC1_9),
        BLOCK_METAL_FALL(MCVersion.MC1_9),
        BLOCK_METAL_HIT(MCVersion.MC1_9),
        BLOCK_METAL_PLACE(MCVersion.MC1_9),
        BLOCK_METAL_PRESSUREPLATE_CLICK_OFF(MCVersion.MC1_9),
        BLOCK_METAL_PRESSUREPLATE_CLICK_ON(MCVersion.MC1_9),
        BLOCK_METAL_STEP(MCVersion.MC1_9),
        BLOCK_NOTE_BASEDRUM(MCVersion.MC1_9),
        BLOCK_NOTE_BASS(MCVersion.MC1_9),
        BLOCK_NOTE_BELL(MCVersion.MC1_12),
        BLOCK_NOTE_CHIME(MCVersion.MC1_12),
        BLOCK_NOTE_FLUTE(MCVersion.MC1_12),
        BLOCK_NOTE_GUITAR(MCVersion.MC1_12),
        BLOCK_NOTE_HARP(MCVersion.MC1_9),
        BLOCK_NOTE_HAT(MCVersion.MC1_9),
        BLOCK_NOTE_PLING(MCVersion.MC1_9),
        BLOCK_NOTE_SNARE(MCVersion.MC1_9),
        BLOCK_NOTE_XYLOPHONE(MCVersion.MC1_12),
        BLOCK_PISTON_CONTRACT(MCVersion.MC1_9),
        BLOCK_PISTON_EXTEND(MCVersion.MC1_9),
        BLOCK_PORTAL_AMBIENT(MCVersion.MC1_9),
        BLOCK_PORTAL_TRAVEL(MCVersion.MC1_9),
        BLOCK_PORTAL_TRIGGER(MCVersion.MC1_9),
        BLOCK_REDSTONE_TORCH_BURNOUT(MCVersion.MC1_9),
        BLOCK_SAND_BREAK(MCVersion.MC1_9),
        BLOCK_SAND_FALL(MCVersion.MC1_9),
        BLOCK_SAND_HIT(MCVersion.MC1_9),
        BLOCK_SAND_PLACE(MCVersion.MC1_9),
        BLOCK_SAND_STEP(MCVersion.MC1_9),
        BLOCK_SHULKER_BOX_CLOSE(MCVersion.MC1_11),
        BLOCK_SHULKER_BOX_OPEN(MCVersion.MC1_11),
        BLOCK_SLIME_BREAK(MCVersion.MC1_9),
        BLOCK_SLIME_FALL(MCVersion.MC1_9),
        BLOCK_SLIME_HIT(MCVersion.MC1_9),
        BLOCK_SLIME_PLACE(MCVersion.MC1_9),
        BLOCK_SLIME_STEP(MCVersion.MC1_9),
        BLOCK_SNOW_BREAK(MCVersion.MC1_9),
        BLOCK_SNOW_FALL(MCVersion.MC1_9),
        BLOCK_SNOW_HIT(MCVersion.MC1_9),
        BLOCK_SNOW_PLACE(MCVersion.MC1_9),
        BLOCK_SNOW_STEP(MCVersion.MC1_9),
        BLOCK_STONE_BREAK(MCVersion.MC1_9),
        BLOCK_STONE_BUTTON_CLICK_OFF(MCVersion.MC1_9),
        BLOCK_STONE_BUTTON_CLICK_ON(MCVersion.MC1_9),
        BLOCK_STONE_FALL(MCVersion.MC1_9),
        BLOCK_STONE_HIT(MCVersion.MC1_9),
        BLOCK_STONE_PLACE(MCVersion.MC1_9),
        BLOCK_STONE_PRESSUREPLATE_CLICK_OFF(MCVersion.MC1_9),
        BLOCK_STONE_PRESSUREPLATE_CLICK_ON(MCVersion.MC1_9),
        BLOCK_STONE_STEP(MCVersion.MC1_9),
        BLOCK_TRIPWIRE_ATTACH(MCVersion.MC1_9),
        BLOCK_TRIPWIRE_CLICK_OFF(MCVersion.MC1_9),
        BLOCK_TRIPWIRE_CLICK_ON(MCVersion.MC1_9),
        BLOCK_TRIPWIRE_DETACH(MCVersion.MC1_9),
        BLOCK_WATERLILY_PLACE(MCVersion.MC1_9),
        BLOCK_WATER_AMBIENT(MCVersion.MC1_9),
        BLOCK_WOODEN_DOOR_CLOSE(MCVersion.MC1_9),
        BLOCK_WOODEN_DOOR_OPEN(MCVersion.MC1_9),
        BLOCK_WOODEN_TRAPDOOR_CLOSE(MCVersion.MC1_9),
        BLOCK_WOODEN_TRAPDOOR_OPEN(MCVersion.MC1_9),
        BLOCK_WOOD_BREAK(MCVersion.MC1_9),
        BLOCK_WOOD_BUTTON_CLICK_OFF(MCVersion.MC1_9),
        BLOCK_WOOD_BUTTON_CLICK_ON(MCVersion.MC1_9),
        BLOCK_WOOD_FALL(MCVersion.MC1_9),
        BLOCK_WOOD_HIT(MCVersion.MC1_9),
        BLOCK_WOOD_PLACE(MCVersion.MC1_9),
        BLOCK_WOOD_PRESSUREPLATE_CLICK_OFF(MCVersion.MC1_9),
        BLOCK_WOOD_PRESSUREPLATE_CLICK_ON(MCVersion.MC1_9),
        BLOCK_WOOD_STEP(MCVersion.MC1_9),
        ENCHANT_THORNS_HIT(MCVersion.MC1_9),
        ENTITY_ARMORSTAND_BREAK(MCVersion.MC1_9),
        ENTITY_ARMORSTAND_FALL(MCVersion.MC1_9),
        ENTITY_ARMORSTAND_HIT(MCVersion.MC1_9),
        ENTITY_ARMORSTAND_PLACE(MCVersion.MC1_9),
        ENTITY_ARROW_HIT(MCVersion.MC1_9),
        ENTITY_ARROW_HIT_PLAYER(MCVersion.MC1_9),
        ENTITY_ARROW_SHOOT(MCVersion.MC1_9),
        ENTITY_BAT_AMBIENT(MCVersion.MC1_9),
        ENTITY_BAT_DEATH(MCVersion.MC1_9),
        ENTITY_BAT_HURT(MCVersion.MC1_9),
        ENTITY_BAT_LOOP(MCVersion.MC1_9),
        ENTITY_BAT_TAKEOFF(MCVersion.MC1_9),
        ENTITY_BLAZE_AMBIENT(MCVersion.MC1_9),
        ENTITY_BLAZE_BURN(MCVersion.MC1_9),
        ENTITY_BLAZE_DEATH(MCVersion.MC1_9),
        ENTITY_BLAZE_HURT(MCVersion.MC1_9),
        ENTITY_BLAZE_SHOOT(MCVersion.MC1_9),
        ENTITY_BOAT_PADDLE_LAND(MCVersion.MC1_12),
        ENTITY_BOAT_PADDLE_WATER(MCVersion.MC1_12),
        ENTITY_BOBBER_RETRIEVE(MCVersion.MC1_12),
        ENTITY_BOBBER_SPLASH(MCVersion.MC1_9),
        ENTITY_BOBBER_THROW(MCVersion.MC1_9),
        ENTITY_CAT_AMBIENT(MCVersion.MC1_9),
        ENTITY_CAT_DEATH(MCVersion.MC1_9),
        ENTITY_CAT_HISS(MCVersion.MC1_9),
        ENTITY_CAT_HURT(MCVersion.MC1_9),
        ENTITY_CAT_PURR(MCVersion.MC1_9),
        ENTITY_CAT_PURREOW(MCVersion.MC1_9),
        ENTITY_CHICKEN_AMBIENT(MCVersion.MC1_9),
        ENTITY_CHICKEN_DEATH(MCVersion.MC1_9),
        ENTITY_CHICKEN_EGG(MCVersion.MC1_9),
        ENTITY_CHICKEN_HURT(MCVersion.MC1_9),
        ENTITY_CHICKEN_STEP(MCVersion.MC1_9),
        ENTITY_COW_AMBIENT(MCVersion.MC1_9),
        ENTITY_COW_DEATH(MCVersion.MC1_9),
        ENTITY_COW_HURT(MCVersion.MC1_9),
        ENTITY_COW_MILK(MCVersion.MC1_9),
        ENTITY_COW_STEP(MCVersion.MC1_9),
        ENTITY_CREEPER_DEATH(MCVersion.MC1_9),
        ENTITY_CREEPER_HURT(MCVersion.MC1_9),
        ENTITY_CREEPER_PRIMED(MCVersion.MC1_9),
        ENTITY_DONKEY_AMBIENT(MCVersion.MC1_9),
        ENTITY_DONKEY_ANGRY(MCVersion.MC1_9),
        ENTITY_DONKEY_CHEST(MCVersion.MC1_9),
        ENTITY_DONKEY_DEATH(MCVersion.MC1_9),
        ENTITY_DONKEY_HURT(MCVersion.MC1_9),
        ENTITY_EGG_THROW(MCVersion.MC1_9),
        ENTITY_ELDER_GUARDIAN_AMBIENT(MCVersion.MC1_9),
        ENTITY_ELDER_GUARDIAN_AMBIENT_LAND(MCVersion.MC1_9),
        ENTITY_ELDER_GUARDIAN_CURSE(MCVersion.MC1_9),
        ENTITY_ELDER_GUARDIAN_DEATH(MCVersion.MC1_9),
        ENTITY_ELDER_GUARDIAN_DEATH_LAND(MCVersion.MC1_9),
        ENTITY_ELDER_GUARDIAN_FLOP(MCVersion.MC1_11),
        ENTITY_ELDER_GUARDIAN_HURT(MCVersion.MC1_9),
        ENTITY_ELDER_GUARDIAN_HURT_LAND(MCVersion.MC1_9),
        ENTITY_ENDERDRAGON_AMBIENT(MCVersion.MC1_9),
        ENTITY_ENDERDRAGON_DEATH(MCVersion.MC1_9),
        ENTITY_ENDERDRAGON_FIREBALL_EXPLODE(MCVersion.MC1_9),
        ENTITY_ENDERDRAGON_FLAP(MCVersion.MC1_9),
        ENTITY_ENDERDRAGON_GROWL(MCVersion.MC1_9),
        ENTITY_ENDERDRAGON_HURT(MCVersion.MC1_9),
        ENTITY_ENDERDRAGON_SHOOT(MCVersion.MC1_9),
        ENTITY_ENDEREYE_DEATH(MCVersion.MC1_12),
        ENTITY_ENDEREYE_LAUNCH(MCVersion.MC1_9),
        ENTITY_ENDERMEN_AMBIENT(MCVersion.MC1_9),
        ENTITY_ENDERMEN_DEATH(MCVersion.MC1_9),
        ENTITY_ENDERMEN_HURT(MCVersion.MC1_9),
        ENTITY_ENDERMEN_SCREAM(MCVersion.MC1_9),
        ENTITY_ENDERMEN_STARE(MCVersion.MC1_9),
        ENTITY_ENDERMEN_TELEPORT(MCVersion.MC1_9),
        ENTITY_ENDERMITE_AMBIENT(MCVersion.MC1_9),
        ENTITY_ENDERMITE_DEATH(MCVersion.MC1_9),
        ENTITY_ENDERMITE_HURT(MCVersion.MC1_9),
        ENTITY_ENDERMITE_STEP(MCVersion.MC1_9),
        ENTITY_ENDERPEARL_THROW(MCVersion.MC1_9),
        ENTITY_EVOCATION_FANGS_ATTACK(MCVersion.MC1_11),
        ENTITY_EVOCATION_ILLAGER_AMBIENT(MCVersion.MC1_11),
        ENTITY_EVOCATION_ILLAGER_CAST_SPELL(MCVersion.MC1_11),
        ENTITY_EVOCATION_ILLAGER_DEATH(MCVersion.MC1_11),
        ENTITY_EVOCATION_ILLAGER_HURT(MCVersion.MC1_11),
        ENTITY_EVOCATION_ILLAGER_PREPARE_ATTACK(MCVersion.MC1_11),
        ENTITY_EVOCATION_ILLAGER_PREPARE_SUMMON(MCVersion.MC1_11),
        ENTITY_EVOCATION_ILLAGER_PREPARE_WOLOLO(MCVersion.MC1_11),
        ENTITY_EXPERIENCE_BOTTLE_THROW(MCVersion.MC1_9),
        ENTITY_EXPERIENCE_ORB_PICKUP(MCVersion.MC1_9),
        ENTITY_FIREWORK_BLAST(MCVersion.MC1_9),
        ENTITY_FIREWORK_BLAST_FAR(MCVersion.MC1_9),
        ENTITY_FIREWORK_LARGE_BLAST(MCVersion.MC1_9),
        ENTITY_FIREWORK_LARGE_BLAST_FAR(MCVersion.MC1_9),
        ENTITY_FIREWORK_LAUNCH(MCVersion.MC1_9),
        ENTITY_FIREWORK_SHOOT(MCVersion.MC1_9),
        ENTITY_FIREWORK_TWINKLE(MCVersion.MC1_9),
        ENTITY_FIREWORK_TWINKLE_FAR(MCVersion.MC1_9),
        ENTITY_GENERIC_BIG_FALL(MCVersion.MC1_9),
        ENTITY_GENERIC_BURN(MCVersion.MC1_9),
        ENTITY_GENERIC_DEATH(MCVersion.MC1_9),
        ENTITY_GENERIC_DRINK(MCVersion.MC1_9),
        ENTITY_GENERIC_EAT(MCVersion.MC1_9),
        ENTITY_GENERIC_EXPLODE(MCVersion.MC1_9),
        ENTITY_GENERIC_EXTINGUISH_FIRE(MCVersion.MC1_9),
        ENTITY_GENERIC_HURT(MCVersion.MC1_9),
        ENTITY_GENERIC_SMALL_FALL(MCVersion.MC1_9),
        ENTITY_GENERIC_SPLASH(MCVersion.MC1_9),
        ENTITY_GENERIC_SWIM(MCVersion.MC1_9),
        ENTITY_GHAST_AMBIENT(MCVersion.MC1_9),
        ENTITY_GHAST_DEATH(MCVersion.MC1_9),
        ENTITY_GHAST_HURT(MCVersion.MC1_9),
        ENTITY_GHAST_SCREAM(MCVersion.MC1_9),
        ENTITY_GHAST_SHOOT(MCVersion.MC1_9),
        ENTITY_GHAST_WARN(MCVersion.MC1_9),
        ENTITY_GUARDIAN_AMBIENT(MCVersion.MC1_9),
        ENTITY_GUARDIAN_AMBIENT_LAND(MCVersion.MC1_9),
        ENTITY_GUARDIAN_ATTACK(MCVersion.MC1_9),
        ENTITY_GUARDIAN_DEATH(MCVersion.MC1_9),
        ENTITY_GUARDIAN_DEATH_LAND(MCVersion.MC1_9),
        ENTITY_GUARDIAN_FLOP(MCVersion.MC1_9),
        ENTITY_GUARDIAN_HURT(MCVersion.MC1_9),
        ENTITY_GUARDIAN_HURT_LAND(MCVersion.MC1_9),
        ENTITY_HORSE_AMBIENT(MCVersion.MC1_9),
        ENTITY_HORSE_ANGRY(MCVersion.MC1_9),
        ENTITY_HORSE_ARMOR(MCVersion.MC1_9),
        ENTITY_HORSE_BREATHE(MCVersion.MC1_9),
        ENTITY_HORSE_DEATH(MCVersion.MC1_9),
        ENTITY_HORSE_EAT(MCVersion.MC1_9),
        ENTITY_HORSE_GALLOP(MCVersion.MC1_9),
        ENTITY_HORSE_HURT(MCVersion.MC1_9),
        ENTITY_HORSE_JUMP(MCVersion.MC1_9),
        ENTITY_HORSE_LAND(MCVersion.MC1_9),
        ENTITY_HORSE_SADDLE(MCVersion.MC1_9),
        ENTITY_HORSE_STEP(MCVersion.MC1_9),
        ENTITY_HORSE_STEP_WOOD(MCVersion.MC1_9),
        ENTITY_HOSTILE_BIG_FALL(MCVersion.MC1_9),
        ENTITY_HOSTILE_DEATH(MCVersion.MC1_9),
        ENTITY_HOSTILE_HURT(MCVersion.MC1_9),
        ENTITY_HOSTILE_SMALL_FALL(MCVersion.MC1_9),
        ENTITY_HOSTILE_SPLASH(MCVersion.MC1_9),
        ENTITY_HOSTILE_SWIM(MCVersion.MC1_9),
        ENTITY_HUSK_AMBIENT(MCVersion.MC1_10),
        ENTITY_HUSK_DEATH(MCVersion.MC1_10),
        ENTITY_HUSK_HURT(MCVersion.MC1_10),
        ENTITY_HUSK_STEP(MCVersion.MC1_10),
        ENTITY_ILLUSION_ILLAGER_AMBIENT(MCVersion.MC1_12),
        ENTITY_ILLUSION_ILLAGER_CAST_SPELL(MCVersion.MC1_12),
        ENTITY_ILLUSION_ILLAGER_DEATH(MCVersion.MC1_12),
        ENTITY_ILLUSION_ILLAGER_HURT(MCVersion.MC1_12),
        ENTITY_ILLUSION_ILLAGER_MIRROR_MOVE(MCVersion.MC1_12),
        ENTITY_ILLUSION_ILLAGER_PREPARE_BLINDNESS(MCVersion.MC1_12),
        ENTITY_ILLUSION_ILLAGER_PREPARE_MIRROR(MCVersion.MC1_12),
        ENTITY_IRONGOLEM_ATTACK(MCVersion.MC1_9),
        ENTITY_IRONGOLEM_DEATH(MCVersion.MC1_9),
        ENTITY_IRONGOLEM_HURT(MCVersion.MC1_9),
        ENTITY_IRONGOLEM_STEP(MCVersion.MC1_9),
        ENTITY_ITEMFRAME_ADD_ITEM(MCVersion.MC1_9),
        ENTITY_ITEMFRAME_BREAK(MCVersion.MC1_9),
        ENTITY_ITEMFRAME_PLACE(MCVersion.MC1_9),
        ENTITY_ITEMFRAME_REMOVE_ITEM(MCVersion.MC1_9),
        ENTITY_ITEMFRAME_ROTATE_ITEM(MCVersion.MC1_9),
        ENTITY_ITEM_BREAK(MCVersion.MC1_9),
        ENTITY_ITEM_PICKUP(MCVersion.MC1_9),
        ENTITY_LEASHKNOT_BREAK(MCVersion.MC1_9),
        ENTITY_LEASHKNOT_PLACE(MCVersion.MC1_9),
        ENTITY_LIGHTNING_IMPACT(MCVersion.MC1_9),
        ENTITY_LIGHTNING_THUNDER(MCVersion.MC1_9),
        ENTITY_LINGERINGPOTION_THROW(MCVersion.MC1_9),
        ENTITY_LLAMA_AMBIENT(MCVersion.MC1_11),
        ENTITY_LLAMA_ANGRY(MCVersion.MC1_11),
        ENTITY_LLAMA_CHEST(MCVersion.MC1_11),
        ENTITY_LLAMA_DEATH(MCVersion.MC1_11),
        ENTITY_LLAMA_EAT(MCVersion.MC1_11),
        ENTITY_LLAMA_HURT(MCVersion.MC1_11),
        ENTITY_LLAMA_SPIT(MCVersion.MC1_11),
        ENTITY_LLAMA_STEP(MCVersion.MC1_11),
        ENTITY_LLAMA_SWAG(MCVersion.MC1_11),
        ENTITY_MAGMACUBE_DEATH(MCVersion.MC1_9),
        ENTITY_MAGMACUBE_HURT(MCVersion.MC1_9),
        ENTITY_MAGMACUBE_JUMP(MCVersion.MC1_9),
        ENTITY_MAGMACUBE_SQUISH(MCVersion.MC1_9),
        ENTITY_MINECART_INSIDE(MCVersion.MC1_9),
        ENTITY_MINECART_RIDING(MCVersion.MC1_9),
        ENTITY_MOOSHROOM_SHEAR(MCVersion.MC1_9),
        ENTITY_MULE_AMBIENT(MCVersion.MC1_9),
        ENTITY_MULE_CHEST(MCVersion.MC1_11),
        ENTITY_MULE_DEATH(MCVersion.MC1_9),
        ENTITY_MULE_HURT(MCVersion.MC1_9),
        ENTITY_PAINTING_BREAK(MCVersion.MC1_9),
        ENTITY_PAINTING_PLACE(MCVersion.MC1_9),
        ENTITY_PARROT_AMBIENT(MCVersion.MC1_12),
        ENTITY_PARROT_DEATH(MCVersion.MC1_12),
        ENTITY_PARROT_EAT(MCVersion.MC1_12),
        ENTITY_PARROT_FLY(MCVersion.MC1_12),
        ENTITY_PARROT_HURT(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_BLAZE(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_CREEPER(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_ELDER_GUARDIAN(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_ENDERDRAGON(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_ENDERMAN(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_ENDERMITE(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_EVOCATION_ILLAGER(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_GHAST(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_HUSK(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_ILLUSION_ILLAGER(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_MAGMACUBE(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_POLAR_BEAR(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_SHULKER(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_SILVERFISH(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_SKELETON(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_SLIME(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_SPIDER(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_STRAY(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_VEX(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_VINDICATION_ILLAGER(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_WITCH(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_WITHER(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_WITHER_SKELETON(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_WOLF(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_ZOMBIE(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_ZOMBIE_PIGMAN(MCVersion.MC1_12),
        ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER(MCVersion.MC1_12),
        ENTITY_PARROT_STEP(MCVersion.MC1_12),
        ENTITY_PIG_AMBIENT(MCVersion.MC1_9),
        ENTITY_PIG_DEATH(MCVersion.MC1_9),
        ENTITY_PIG_HURT(MCVersion.MC1_9),
        ENTITY_PIG_SADDLE(MCVersion.MC1_9),
        ENTITY_PIG_STEP(MCVersion.MC1_9),
        ENTITY_PLAYER_ATTACK_CRIT(MCVersion.MC1_9),
        ENTITY_PLAYER_ATTACK_KNOCKBACK(MCVersion.MC1_9),
        ENTITY_PLAYER_ATTACK_NODAMAGE(MCVersion.MC1_9),
        ENTITY_PLAYER_ATTACK_STRONG(MCVersion.MC1_9),
        ENTITY_PLAYER_ATTACK_SWEEP(MCVersion.MC1_9),
        ENTITY_PLAYER_ATTACK_WEAK(MCVersion.MC1_9),
        ENTITY_PLAYER_BIG_FALL(MCVersion.MC1_9),
        ENTITY_PLAYER_BREATH(MCVersion.MC1_9),
        ENTITY_PLAYER_BURP(MCVersion.MC1_9),
        ENTITY_PLAYER_DEATH(MCVersion.MC1_9),
        ENTITY_PLAYER_HURT(MCVersion.MC1_9),
        ENTITY_PLAYER_HURT_DROWN(MCVersion.MC1_12),
        ENTITY_PLAYER_HURT_ON_FIRE(MCVersion.MC1_12),
        ENTITY_PLAYER_LEVELUP(MCVersion.MC1_9),
        ENTITY_PLAYER_SMALL_FALL(MCVersion.MC1_9),
        ENTITY_PLAYER_SPLASH(MCVersion.MC1_9),
        ENTITY_PLAYER_SWIM(MCVersion.MC1_9),
        ENTITY_POLAR_BEAR_AMBIENT(MCVersion.MC1_10),
        ENTITY_POLAR_BEAR_BABY_AMBIENT(MCVersion.MC1_10),
        ENTITY_POLAR_BEAR_DEATH(MCVersion.MC1_10),
        ENTITY_POLAR_BEAR_HURT(MCVersion.MC1_10),
        ENTITY_POLAR_BEAR_STEP(MCVersion.MC1_10),
        ENTITY_POLAR_BEAR_WARNING(MCVersion.MC1_10),
        ENTITY_RABBIT_AMBIENT(MCVersion.MC1_9),
        ENTITY_RABBIT_ATTACK(MCVersion.MC1_9),
        ENTITY_RABBIT_DEATH(MCVersion.MC1_9),
        ENTITY_RABBIT_HURT(MCVersion.MC1_9),
        ENTITY_RABBIT_JUMP(MCVersion.MC1_9),
        ENTITY_SHEEP_AMBIENT(MCVersion.MC1_9),
        ENTITY_SHEEP_DEATH(MCVersion.MC1_9),
        ENTITY_SHEEP_HURT(MCVersion.MC1_9),
        ENTITY_SHEEP_SHEAR(MCVersion.MC1_9),
        ENTITY_SHEEP_STEP(MCVersion.MC1_9),
        ENTITY_SHULKER_AMBIENT(MCVersion.MC1_9),
        ENTITY_SHULKER_BULLET_HIT(MCVersion.MC1_9),
        ENTITY_SHULKER_BULLET_HURT(MCVersion.MC1_9),
        ENTITY_SHULKER_CLOSE(MCVersion.MC1_9),
        ENTITY_SHULKER_DEATH(MCVersion.MC1_9),
        ENTITY_SHULKER_HURT(MCVersion.MC1_9),
        ENTITY_SHULKER_HURT_CLOSED(MCVersion.MC1_9),
        ENTITY_SHULKER_OPEN(MCVersion.MC1_9),
        ENTITY_SHULKER_SHOOT(MCVersion.MC1_9),
        ENTITY_SHULKER_TELEPORT(MCVersion.MC1_9),
        ENTITY_SILVERFISH_AMBIENT(MCVersion.MC1_9),
        ENTITY_SILVERFISH_DEATH(MCVersion.MC1_9),
        ENTITY_SILVERFISH_HURT(MCVersion.MC1_9),
        ENTITY_SILVERFISH_STEP(MCVersion.MC1_9),
        ENTITY_SKELETON_AMBIENT(MCVersion.MC1_9),
        ENTITY_SKELETON_DEATH(MCVersion.MC1_9),
        ENTITY_SKELETON_HORSE_AMBIENT(MCVersion.MC1_9),
        ENTITY_SKELETON_HORSE_DEATH(MCVersion.MC1_9),
        ENTITY_SKELETON_HORSE_HURT(MCVersion.MC1_9),
        ENTITY_SKELETON_HURT(MCVersion.MC1_9),
        ENTITY_SKELETON_SHOOT(MCVersion.MC1_9),
        ENTITY_SKELETON_STEP(MCVersion.MC1_9),
        ENTITY_SLIME_ATTACK(MCVersion.MC1_9),
        ENTITY_SLIME_DEATH(MCVersion.MC1_9),
        ENTITY_SLIME_HURT(MCVersion.MC1_9),
        ENTITY_SLIME_JUMP(MCVersion.MC1_9),
        ENTITY_SLIME_SQUISH(MCVersion.MC1_9),
        ENTITY_SMALL_MAGMACUBE_DEATH(MCVersion.MC1_9),
        ENTITY_SMALL_MAGMACUBE_HURT(MCVersion.MC1_9),
        ENTITY_SMALL_MAGMACUBE_SQUISH(MCVersion.MC1_9),
        ENTITY_SMALL_SLIME_DEATH(MCVersion.MC1_9),
        ENTITY_SMALL_SLIME_HURT(MCVersion.MC1_9),
        ENTITY_SMALL_SLIME_JUMP(MCVersion.MC1_9),
        ENTITY_SMALL_SLIME_SQUISH(MCVersion.MC1_9),
        ENTITY_SNOWBALL_THROW(MCVersion.MC1_9),
        ENTITY_SNOWMAN_AMBIENT(MCVersion.MC1_9),
        ENTITY_SNOWMAN_DEATH(MCVersion.MC1_9),
        ENTITY_SNOWMAN_HURT(MCVersion.MC1_9),
        ENTITY_SNOWMAN_SHOOT(MCVersion.MC1_9),
        ENTITY_SPIDER_AMBIENT(MCVersion.MC1_9),
        ENTITY_SPIDER_DEATH(MCVersion.MC1_9),
        ENTITY_SPIDER_HURT(MCVersion.MC1_9),
        ENTITY_SPIDER_STEP(MCVersion.MC1_9),
        ENTITY_SPLASH_POTION_BREAK(MCVersion.MC1_9),
        ENTITY_SPLASH_POTION_THROW(MCVersion.MC1_9),
        ENTITY_SQUID_AMBIENT(MCVersion.MC1_9),
        ENTITY_SQUID_DEATH(MCVersion.MC1_9),
        ENTITY_SQUID_HURT(MCVersion.MC1_9),
        ENTITY_STRAY_AMBIENT(MCVersion.MC1_10),
        ENTITY_STRAY_DEATH(MCVersion.MC1_10),
        ENTITY_STRAY_HURT(MCVersion.MC1_10),
        ENTITY_STRAY_STEP(MCVersion.MC1_10),
        ENTITY_TNT_PRIMED(MCVersion.MC1_9),
        ENTITY_VEX_AMBIENT(MCVersion.MC1_11),
        ENTITY_VEX_CHARGE(MCVersion.MC1_11),
        ENTITY_VEX_DEATH(MCVersion.MC1_11),
        ENTITY_VEX_HURT(MCVersion.MC1_11),
        ENTITY_VILLAGER_AMBIENT(MCVersion.MC1_9),
        ENTITY_VILLAGER_DEATH(MCVersion.MC1_9),
        ENTITY_VILLAGER_HURT(MCVersion.MC1_9),
        ENTITY_VILLAGER_NO(MCVersion.MC1_9),
        ENTITY_VILLAGER_TRADING(MCVersion.MC1_9),
        ENTITY_VILLAGER_YES(MCVersion.MC1_9),
        ENTITY_VINDICATION_ILLAGER_AMBIENT(MCVersion.MC1_11),
        ENTITY_VINDICATION_ILLAGER_DEATH(MCVersion.MC1_11),
        ENTITY_VINDICATION_ILLAGER_HURT(MCVersion.MC1_11),
        ENTITY_WITCH_AMBIENT(MCVersion.MC1_9),
        ENTITY_WITCH_DEATH(MCVersion.MC1_9),
        ENTITY_WITCH_DRINK(MCVersion.MC1_9),
        ENTITY_WITCH_HURT(MCVersion.MC1_9),
        ENTITY_WITCH_THROW(MCVersion.MC1_9),
        ENTITY_WITHER_AMBIENT(MCVersion.MC1_9),
        ENTITY_WITHER_BREAK_BLOCK(MCVersion.MC1_9),
        ENTITY_WITHER_DEATH(MCVersion.MC1_9),
        ENTITY_WITHER_HURT(MCVersion.MC1_9),
        ENTITY_WITHER_SHOOT(MCVersion.MC1_9),
        ENTITY_WITHER_SKELETON_AMBIENT(MCVersion.MC1_10),
        ENTITY_WITHER_SKELETON_DEATH(MCVersion.MC1_10),
        ENTITY_WITHER_SKELETON_HURT(MCVersion.MC1_10),
        ENTITY_WITHER_SKELETON_STEP(MCVersion.MC1_10),
        ENTITY_WITHER_SPAWN(MCVersion.MC1_9),
        ENTITY_WOLF_AMBIENT(MCVersion.MC1_9),
        ENTITY_WOLF_DEATH(MCVersion.MC1_9),
        ENTITY_WOLF_GROWL(MCVersion.MC1_9),
        ENTITY_WOLF_HOWL(MCVersion.MC1_9),
        ENTITY_WOLF_HURT(MCVersion.MC1_9),
        ENTITY_WOLF_PANT(MCVersion.MC1_9),
        ENTITY_WOLF_SHAKE(MCVersion.MC1_9),
        ENTITY_WOLF_STEP(MCVersion.MC1_9),
        ENTITY_WOLF_WHINE(MCVersion.MC1_9),
        ENTITY_ZOMBIE_AMBIENT(MCVersion.MC1_9),
        ENTITY_ZOMBIE_ATTACK_DOOR_WOOD(MCVersion.MC1_9),
        ENTITY_ZOMBIE_ATTACK_IRON_DOOR(MCVersion.MC1_9),
        ENTITY_ZOMBIE_BREAK_DOOR_WOOD(MCVersion.MC1_9),
        ENTITY_ZOMBIE_DEATH(MCVersion.MC1_9),
        ENTITY_ZOMBIE_HORSE_AMBIENT(MCVersion.MC1_9),
        ENTITY_ZOMBIE_HORSE_DEATH(MCVersion.MC1_9),
        ENTITY_ZOMBIE_HORSE_HURT(MCVersion.MC1_9),
        ENTITY_ZOMBIE_HURT(MCVersion.MC1_9),
        ENTITY_ZOMBIE_INFECT(MCVersion.MC1_9),
        ENTITY_ZOMBIE_PIG_AMBIENT(MCVersion.MC1_9),
        ENTITY_ZOMBIE_PIG_ANGRY(MCVersion.MC1_9),
        ENTITY_ZOMBIE_PIG_DEATH(MCVersion.MC1_9),
        ENTITY_ZOMBIE_PIG_HURT(MCVersion.MC1_9),
        ENTITY_ZOMBIE_STEP(MCVersion.MC1_9),
        ENTITY_ZOMBIE_VILLAGER_AMBIENT(MCVersion.MC1_9),
        ENTITY_ZOMBIE_VILLAGER_CONVERTED(MCVersion.MC1_9),
        ENTITY_ZOMBIE_VILLAGER_CURE(MCVersion.MC1_9),
        ENTITY_ZOMBIE_VILLAGER_DEATH(MCVersion.MC1_9),
        ENTITY_ZOMBIE_VILLAGER_HURT(MCVersion.MC1_9),
        ENTITY_ZOMBIE_VILLAGER_STEP(MCVersion.MC1_9),
        ITEM_ARMOR_EQUIP_CHAIN(MCVersion.MC1_9),
        ITEM_ARMOR_EQUIP_DIAMOND(MCVersion.MC1_9),
        ITEM_ARMOR_EQUIP_ELYTRA(MCVersion.MC1_11),
        ITEM_ARMOR_EQUIP_GENERIC(MCVersion.MC1_9),
        ITEM_ARMOR_EQUIP_GOLD(MCVersion.MC1_9),
        ITEM_ARMOR_EQUIP_IRON(MCVersion.MC1_9),
        ITEM_ARMOR_EQUIP_LEATHER(MCVersion.MC1_9),
        ITEM_BOTTLE_EMPTY(MCVersion.MC1_11),
        ITEM_BOTTLE_FILL(MCVersion.MC1_9),
        ITEM_BOTTLE_FILL_DRAGONBREATH(MCVersion.MC1_9),
        ITEM_BUCKET_EMPTY(MCVersion.MC1_9),
        ITEM_BUCKET_EMPTY_LAVA(MCVersion.MC1_9),
        ITEM_BUCKET_FILL(MCVersion.MC1_9),
        ITEM_BUCKET_FILL_LAVA(MCVersion.MC1_9),
        ITEM_CHORUS_FRUIT_TELEPORT(MCVersion.MC1_9),
        ITEM_ELYTRA_FLYING(MCVersion.MC1_9_X),
        ITEM_FIRECHARGE_USE(MCVersion.MC1_9),
        ITEM_FLINTANDSTEEL_USE(MCVersion.MC1_9),
        ITEM_HOE_TILL(MCVersion.MC1_9),
        ITEM_SHIELD_BLOCK(MCVersion.MC1_9),
        ITEM_SHIELD_BREAK(MCVersion.MC1_9),
        ITEM_SHOVEL_FLATTEN(MCVersion.MC1_9),
        ITEM_TOTEM_USE(MCVersion.MC1_11),
        MUSIC_CREATIVE(MCVersion.MC1_9),
        MUSIC_CREDITS(MCVersion.MC1_9),
        MUSIC_DRAGON(MCVersion.MC1_9),
        MUSIC_END(MCVersion.MC1_9),
        MUSIC_GAME(MCVersion.MC1_9),
        MUSIC_MENU(MCVersion.MC1_9),
        MUSIC_NETHER(MCVersion.MC1_9),
        RECORD_11(MCVersion.MC1_9),
        RECORD_13(MCVersion.MC1_9),
        RECORD_BLOCKS(MCVersion.MC1_9),
        RECORD_CAT(MCVersion.MC1_9),
        RECORD_CHIRP(MCVersion.MC1_9),
        RECORD_FAR(MCVersion.MC1_9),
        RECORD_MALL(MCVersion.MC1_9),
        RECORD_MELLOHI(MCVersion.MC1_9),
        RECORD_STAL(MCVersion.MC1_9),
        RECORD_STRAD(MCVersion.MC1_9),
        RECORD_WAIT(MCVersion.MC1_9),
        RECORD_WARD(MCVersion.MC1_9),
        UI_BUTTON_CLICK(MCVersion.MC1_9),
        UI_TOAST_CHALLENGE_COMPLETE(MCVersion.MC1_12),
        UI_TOAST_IN(MCVersion.MC1_12),
        UI_TOAST_OUT(MCVersion.MC1_12),
        WEATHER_RAIN(MCVersion.MC1_9),
        WEATHER_RAIN_ABOVE(MCVersion.MC1_9),

        UNKNOWN(MCVersion.NEVER);

        private final MCVersion since;

        MCVanillaSound() {
            this(MCVersion.MC1_0);
        }

        MCVanillaSound(MCVersion since) {
            this.since = since;
        }

        public boolean existsInCurrent() {
            return Static.getServer().getMinecraftVersion().gte(since);
        }
    }
}
